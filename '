#!/bin/bash
clear
echo 'Begin Analysis'
echo $(date)

echo -ne "\e[97m"
echo "===================================================================================="
echo "=                        Setup                                                     =" 
echo "===================================================================================="
echo -ne "\e[0m"

if [ x$usearch == x ] ; then
	echo Must set \$usearch
	exit 1
fi

if [ "$1" == "" ]
then
	echo 'What is the file path to your data?'
	read data
else
	data=$1
fi

# making directory structure
mkdir -p $data/AnalysisSummary/
mkdir -p $data/out

if [ ! -d $data ]; then
	echo "Data directory is invalid"
	exit
elif [ ! -f $data'/index1.fastq' ]; then
	echo "index1.fastq not found"	
	exit
elif [ ! -f $data'/index2.fastq' ]; then
	echo "index2.fastq not found"	
	exit
elif [ ! -f $data'/read1.fastq' ]; then
	echo "read1.fastq not found"	
	exit
elif [ ! -f $data'/read2.fastq' ]; then
	echo "read2.fastq not found"	
	exit
elif [ ! -f $data'/mappingData.txt' ]; then
	echo "mappingData.txt not found"	
	exit
fi

clear

echo -ne "\e[97m"
echo 'Where would you like the analysis to start?'
echo '1: Full Analysis (All Steps)'
echo '2: demultiplex'
echo '3: demux sample read count'
echo '4: merge pairs'
echo '5: filter merged reads'
echo '6: isolate unique reads'
echo '7: Seperate 16s from ITS and trim primer'
echo '8: Create OTU table'
echo '9: Unoise3 (ZOTU)'
echo '10: OTU Table'
echo '11: Taxonomy prediction'
echo '12: Taxonomy Prediction Summary'

read choice
echo -ne "\e[0m"

clear

if [ $choice -le 1 ]
then
echo -ne "\e[97m"
echo "===================================================================================="
echo "=                         Create index and barcode files                           ="
echo "===================================================================================="
echo -ne "\e[0m"

	rm -f $data/out/*
	# join index files to indices file
	$usearch -fastq_join $data'/index1.fastq' -reverse $data'/index2.fastq' -join_padgap\
		"" -threads 1 -fastqout $data'/out/indices.fastq'

	# createBarcode file
	while IFS=$'\t' read -r -a line
	do
		echo ">${line[0]}" >> $data'/out/bar.fasta'	
		echo "${line[1]}" >> $data'/out/bar.fasta'
	done < $data'/mappingData.txt'

	# fix barcode file
	python scripts/reformatBarcodes.py >> $data'/out/barTemp.fasta'

fi

if [ $choice -le 2 ]
then
echo -ne "\e[97m"
echo "===================================================================================="
echo "=                         Demultiplex                                              ="
echo "===================================================================================="
echo -ne "\e[0m"

	# need to fix mapping Data with python code

	$usearch -fastx_demux $data'/read1.fastq' -reverse $data'/read2.fastq'\
		-index $data'/out/indices.fastq' -barcodes $data'/out/barTemp.fasta'\
		-fastqout $data'/out/demux_R1.fastq' -output2 $data'/out/demux_R2.fastq'
fi

if [ $choice -le 3 ]
then
	#python scripts/readPerSamplePostDemux.py $data/out/demux_R1.fastq > readsPerSample.txt
	#head readsPerSample.txt

	$usearch -fastx_info $data'/out/demux_R1.fastq'

	#echo; read -rsn1 -p "Press Any key to continue"; echo
fi

if [ $choice -le 4 ]
then
echo -ne "\e[97m"
echo "===================================================================================="
echo "=                         Merge Pairs                                              ="
echo "===================================================================================="
echo -ne "\e[0m"
	$usearch -fastq_mergepairs $data'/out/demux_R1.fastq' -relabel @ \
		-fastq_maxdiffs 5 -fastqout $data'/out/merged.fastq'
fi

if [ $choice -le 5 ]
then
echo -ne "\e[97m"
echo "===================================================================================="
echo "=                         Quality Filter                                           ="
echo "===================================================================================="
echo -ne "\e[0m"
	$usearch -fastq_filter $data'/out/merged.fastq' -fastq_maxee 1.0\
		-fastaout $data'/out/filtered.fasta' 
	
fi

if [ $choice -le 6 ]
then
echo -ne "\e[97m"
echo "===================================================================================="
echo "=                         Unique reads collect                                     ="
echo "===================================================================================="
echo -ne "\e[0m"
	$usearch -fastx_uniques $data'/out/filtered.fasta' -fastaout $data'/out/uniques.fasta'\
		-relabel Uniq -sizeout
fi

if [ $choice -le 7 ]
then
echo -ne "\e[97m"
echo "===================================================================================="
echo "=                         Seperate 16s from ITS and trim primer                    ="
echo "===================================================================================="
echo -ne "\e[0m"
	#TODO: move above fastx_uniques
	$usearch -search_pcr $data/out/uniques.fasta -db $data/primer16s.fasta -strand both \
		-maxdiffs 3 -minamp 100 -maxamp 500 -ampout $data/out/uniques16s.fasta
	
	$usearch -search_pcr $data/out/uniques.fasta -db $data/primerITS.fasta -strand both \
		-maxdiffs 3 -minamp 100 -maxamp 500 -ampout $data/out/uniquesITS.fasta

	$usearch -fastx_truncate $data/out/uniques16s.fasta -stripleft 19 -stripright 20 \
		-fastaout $data/out/uniquesStripped16s.fasta

	$usearch -fastx_truncate $data/out/uniquesITS.fasta -stripleft 22 -stripright 20 \
		-fastaout $data/out/uniquesStrippedITS.fasta

	$usearch -sortbysize $data/out/uniquesStripped16s.fasta \
		-fastaout $data/out/uniquesStripped16s.fasta

	$usearch -sortbysize $data/out/uniquesStrippedITS.fasta \
		-fastaout $data/out/uniquesStrippedITS.fasta
fi

if [ $choice -le 8 ]
then
echo -ne "\e[97m"
echo "===================================================================================="
echo "=                         Create OTU                                               ="
echo "===================================================================================="
echo -ne "\e[0m"
	$usearch -cluster_otus $data'/out/uniquesStripped16s.fasta' -minsize 2 \
		-otus $data'/out/otus16s.fasta' -relabel Otu16s
	
	$usearch -cluster_otus $data'/out/uniquesStrippedITS.fasta' -minsize 2 \
		-otus $data'/out/otusITS.fasta' -relabel OtuITS
fi

if [ $choice -le 9 ]
then 
echo -ne "\e[97m"
echo "===================================================================================="
echo "=                         Create ZOTU w/ Unoise3                                   ="
echo "===================================================================================="
echo -ne "\e[0m"
	$usearch -unoise3 $data'/out/uniquesStripped16s.fasta' -zotus $data'/out/zotu16s.fasta'\
		-tabbedout $data/out/unoise3_16s.txt

	$usearch -unoise3 $data'/out/uniquesStrippedITS.fasta' -zotus $data'/out/zotuITS.fasta'\
		-tabbedout $data/out/unoise3_ITS.txt
fi

if [ $choice -le 10 ]
then 
echo -ne "\e[97m"
echo "===================================================================================="
echo "=                         Create OTU Table                                         ="
echo "===================================================================================="
echo -ne "\e[0m"

#	$usearch -usearch_global $data/out/uniquesStripped16s.fasta --db $data/out/otus16s.fasta\
#		-strand plus -id 0.97 -otutabout $data/out/otutable16s.txt
#	
#	$usearch -usearch_global $data/out/uniquesStrippedITS.fasta --db $data/out/otusITS.fasta\
#		-strand plus -id 0.97 -otutabout $data/out/otutableITS.txt

	$usearch -otutab $data/out/merged.fastq -otus $data/out/otus16s.fasta -otutabout \
		otutab16s.txt
	
	$usearch -otutab $data/out/merged.fastq -otus $data/out/otusITS.fasta -otutabout \
		otutabITS.txt
fi

if [ $choice -le 11 ]
then 
echo -ne "\e[97m"
echo "===================================================================================="
echo "=                         Taxonomy Prediction                                      ="
echo "===================================================================================="
echo -ne "\e[0m"
	$usearch -sintax $data/out/uniquesStripped16s.fasta -db $data/refData/rdp_16s_v16.fa \
		-tabbedout $data/out/reads16s.sintax -strand both -sintax_cutoff 0.8
	
	$usearch -sintax $data/out/uniquesStrippedITS.fasta -db $data/refData/rdp_its_v2.fa \
		-tabbedout $data/out/readsITS.sintax -strand both -sintax_cutoff 0.8
fi

if [ $choice -le 12 ]
then 
echo -ne "\e[97m"
echo "===================================================================================="
echo "=                         Taxonomy Prediction Summary                              ="
echo "===================================================================================="
echo -ne "\e[0m"
	$usearch -sintax_summary $data/out/reads16s.sintax -otutabin $data/out/otu16s.txt \
		-output	$data/out/phylum_16s_summary.txt -rank p

	$usearch -sintax_summary $data/out/readsITS.sintax -otutabin $data/out/otuITS.txt\
		-output	$data/out/phylum_ITS_summary.txt -rank p
fi

if [ $choice -le -1 ]
then
echo -ne "\e[97m"
echo "===================================================================================="
echo "=                         Conclusion                                               ="
echo "===================================================================================="
echo ""
echo "===================================================================================="
echo "=                                                                                  ="
echo "=                                                                                  ="
echo "=        When this feature is complete there will be stats on this run here        ="
echo "=                                                                                  ="
echo "=                                                                                  ="
echo "===================================================================================="
echo 'How would you like to conlcude this run?'
echo '1: Delete run'
echo '2: Save run'
read choice
echo -ne "\e[0m"

if [ $choice == 2 ]
then
echo 'the saving feature is not complete.'
exit
num=0
	echo 'Who is saving this data?'
	read name
while [ -d  $data/AnalysisSummary/$(date "+%d-%m-%y").$name.$num ]
do
	num=$((num + 1))
done
	#mkdir $data/AnalysisSummary/$(date "+%d-%m-%y").$name.$num
	#echo 'What is significant about this run? this will be stored with saved data?'
	#read sig
	#clear
	#echo $sig >> $data/AnalysisSummary/$(date "+%d-%m-%y").$name.$num/README.md
	#save=AnalysisSummary/$(date "+%d-%m-%y").$name.$num
	#cd $data
	# tar -zcvf dataCompress.tar --full-time out 
	# tar cf - $data/out -P | pv -s $(du -sb $data/out | awk '{print $1}') | gzip > big-files.tar.gz
	# mv dataCompress.tar ../$save
	#tar --totals=USR1 -czvf dataCompress.tar out
fi
fi
